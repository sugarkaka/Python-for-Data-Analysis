# 创建ndarray
data1 = [6, 7.5, 8, 3]
arr1 = np.array(data1)
arr1

data2 = [[1, 2, 3, 4], [5, 6, 7, 8]]
arr2 = np.array(data2)
arr2

arr2.shape 
out：(2, 4)
arr2.ndim 
out: 2

arr1.dtype 

# 创建指定长度全为0或1的数组
np.zeros(10)
np.zeros(2)
np.ones(2)

# 创建一个正方的NN矩阵
np.eye(2)

# arange 函数是内置函数range的数组版
np.arange(6)
out: array([0, 1, 2, 3, 4, 5])

# 可以通过astype方法转换dtype
arr = np.array([1, 2, 3, 4])
arr.dtype 
out: dtype('int64')

float_art = arr.astype(np.float64)


# 可以在创建时制定数据类型
arr1 = np.array([1, 2, 3], dtype = np.float64)
arr2 = np.array([1, 2, 3], dtype = np.int32)

# 数组的dtype还有另外的用法如
int_array = np.array(10)
caliber = np.array([.22, .26, .357, .380, .44, .50], dtype = np.float64)

int_array.astype(caliber.dtype)

# 数组可以让你不用编写循环就可以对数据执行批量运算
arr = np.array([1, 2, 3], [4, 5, 6])
arr
d
